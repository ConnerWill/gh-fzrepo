#!/bin/bash

#readonly THIS_CMD="${0##*/}"
readonly VERSION="0.1.0"
readonly LICENSE="MIT"
readonly GITHUB_URL="https://github.com"
readonly AUTHOR="sheepla,ConnerWill"

readonly KEYBINDINGS="\
Enter        View README
Ctrl+D       Clone repository
Ctrl+O       Open repository in browser
Ctrl+N       Change layout
Esc          Exit"

function _version() {
	cat <<EOS
${THIS_CMD} v${VERSION}
released under the ${LICENSE} license.
    Author: ${AUTHOR} (${GITHUB_URL}/${AUTHOR})
EOS
}

function _help() {
	cat <<EOS
gh fzrepo -- GitHub repository browser with fzf

USAGE
    gh fzrepo KEYWORDS...
    gh fzrepo -h|--help
    gh fzrepo -V|--version
EOS
}

function _main() {

	if [[ "${#}" -le 0 ]]; then
		_help
		_err "Must require arguments..."
		return 1
	fi

	for arg in "${@}"; do
		case "${arg}" in
		-h | --help)
			_help
			return 0
			;;
		-V | --version)
			_version
			return 0
			;;
		esac
	done

	_search_repo "${*}" | _fzf
}

function _err() {
	printf "[\e[31m ERR \e[m] %s\n" "${*}"
}

function _encode() {
	echo -n "${*}" | od -tx1 -An | tr ' ' % | tr -d \\n
}

gh_sort_order="desc"
gh_page_number=1
gh_sort_by="stars"
gh_search_lang=""

function _search_repo() {
    local query
    query="$(_encode "${*}")"

    gh api \
        --header "Accept: application/vnd.github.v3+json" \
        --jq ".items[].full_name" \
        "search/repositories?q=${query}&s=${gh_sort_by}&o=${gh_sort_order}&l=${gh_search_lang}&p=${gh_page_number}"
}

#function _search_repo() {
#    local query
#    query="$(_encode "${*}")"
#
#    gh api \
#        --header "Accept: application/vnd.github.v3+json" \
#        --jq ".items[].full_name" \
#        "search/repositories?q=${query}&s=stars&o=desc"
#}


function _fzf() {
	fzf </dev/stdin \
		--multi \
		--cycle \
		--keep-right \
		--header "${KEYBINDINGS}" \
		--header-first \
		--preview "gh repo view {}" \
		--bind "enter:execute(gh repo view {} & read && clear)" \
		--bind "ctrl-d:execute(gh repo clone {})" \
		--bind "ctrl-o:execute(gh repo view {} -w &>/dev/null &)" \
		--bind "ctrl-n:change-preview-window(right,80%|up,65%,border-horizontal|hidden|right)" \
		--bind "esc:accept-non-empty"
}



_main "${@}"
exit "${?}"
